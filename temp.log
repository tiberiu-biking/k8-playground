---
# Source: id-service/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: id-service-1.0.6
    app.kubernetes.io/name: id-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.0.6"
    app.kubernetes.io/managed-by: Helm
  name: "id-service-service-account"
---
# Source: id-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-id-service
  labels:
    helm.sh/chart: id-service-1.0.6
    app.kubernetes.io/name: id-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: id-service
    app.kubernetes.io/instance: RELEASE-NAME
  ports:
    - name: app-port
      port: 30000
      protocol: TCP
      targetPort: 30000
    - name: ac-port
      port: 30001
      protocol: TCP
      targetPort: 30001
---
# Source: id-service/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-id-service
  labels:
    helm.sh/chart: id-service-1.0.6
    app.kubernetes.io/name: id-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: RELEASE-NAME-id-service
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: id-service
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: id-service
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: id-service-service-account
      securityContext:
        {}
      containers:
        - name: id-service
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            {}
          image: "id-service:1.0.6"
          imagePullPolicy: Never

          ports:
            - name: http
              containerPort: 30000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 30001
            periodSeconds: 30
            initialDelaySeconds: 30
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 30001
            periodSeconds: 30
            initialDelaySeconds: 30
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 30001
            periodSeconds: 30
            initialDelaySeconds: 30
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5

          resources:
            limits:
              cpu: "2"
              memory: 512Mi
            requests:
              cpu: "1"
              memory: 256Mi
---
# Source: id-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: RELEASE-NAME-id-service
  labels:
    helm.sh/chart: id-service-1.0.6
    app.kubernetes.io/name: id-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: id.k8local
      http:
        paths:
          - path: /id
            pathType: Prefix
            backend:
              service:
                name: RELEASE-NAME-id-service
                port:
                  number: 30000
---
# Source: id-service/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-id-service-test-connection"
  labels:
    helm.sh/chart: id-service-1.0.6
    app.kubernetes.io/name: id-service
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.0.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: [ 'wget' ]
      args: [ 'RELEASE-NAME-id-service:' ]
  restartPolicy: Never
